body {
  font-family: Arial;
  margin: 0;
  background-color: #111;
}

div {
  padding: 2px 5px;
  margin: 1px;
  background-color: #111;
  width: 180px;
}

section {
  position: fixed;
  left: 0;
  top: 0;
  z-index: 2;
  display: flex;
  flex-wrap: wrap;
}

div, span, time, label, input {
  line-height: 0.9rem;
  font-size: 0.75rem;
}

input {
  border: 0;
  background-color: transparent;
  color: rgb(20, 200, 100);
  width: 100px;
}

span {
  padding: 1px;
  margin: 1px;
  display: inline-block;
  color: #fff;
  width: 100px;
}

.critical {
  color: #f00;
  font-weight: bold;
}

label {
  width: 55px;
  display: inline-block;
  color: rgb(255, 255, 255);
}

#time, #health {
  color: #fff;
  padding: 5px;
  margin: 1px;
  display: block;
}

canvas {
  position: absolute;
  background-color: transparent;
  left: -20px;
  top: 0;
  right: 0;
  bottom: 0;
  height: 100vh;
  width: 100vw;

}

button {
  border: 0px;
  padding: 2px 5px;
  background-color: rgba(10, 200, 230, 0.9);
}

button:hover {
  background-color: rgba(200, 10, 210, 0.8);
}

button[disabled] {
  opacity: 0.5;
  background-color: transparent;
}

#final {
  position: absolute;
  opacity: 1.0;
  transition: 1s opacity;
  top: 100px;
  left: 0;
  width: 95vw;
  padding: 2vw;
  z-index: 3;
  color: rgba(202, 170, 50, 0.9);
  line-height: 1.3rem;
  font-size: 1.1rem;
}

#final.hidden {
  opacity: 0.0;
}

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

#experiences {
  width: auto;
}

#experiences p {
  padding: 2px 3px;
  margin: 2px;
  display: inline-block;
  background-color: rgba(55, 55, 55, 0.5);
  border-radius: 3px;
}

#experiences p em {
  color: rgb(20, 200, 210);
}

li {
  margin: 2px 5px;
}

h2 {
  font-size: 1.3rem;
}

button#reset {
  background-color: #aaa;
}

#world {
  position: fixed;
  left: 10px;
  top: 30vh;
  bottom: 20vh;
  right: 10px;
  z-index: 3;

  overflow: auto;
  padding: 10px;
}

#world h1 {
  background-color: rgb(255, 0, 123);
  color: #0ff;
  font-weight: 300;
  font-family: monospace;
  font-size: 1rem;
  letter-spacing: 1px;
}

#world {
  background: linear-gradient(45deg, rgba(46, 234, 121, 0.677), rgba(1, 1, 1, 0));
  filter: blur(15px);
  color: white;

  border: calc(var(--gate) * 1px) solid hsl(var(--h) 90% 55%);
  border-radius: calc(8px + var(--depth) * 4px);
  box-shadow: 0 10px calc(10px + var(--depth) * 4px) hsl(var(--h) 70% 40% / 0.45);

  animation: sag-pulse calc(1.5s + (4s * (1 - var(--reveal)))) ease-in-out infinite alternate;
  transform-origin: 50% 55%;
  padding: 1rem 1.25rem;
  transition: filter .3s ease, transform .3s ease, background-position .6s ease;
  background-size: 200% 200%;
}

#world[data-sag-wind="1"] {
  animation-name: sag-pulse, sag-sway;
  animation-duration: calc(1.5s + (4s * (1 - var(--reveal)))), calc(6s - 2s * var(--spawn));
  animation-timing-function: ease-in-out, linear;
  animation-iteration-count: infinite;
  background-position: 0% 0%;
}

#world[data-sag-day="1"] {
  filter: brightness(1.1) saturate(1.15);
}
#world[data-sag-day="0"] {
  filter: brightness(0.85) saturate(1.0);
}

#world[data-sag-facet="0"] { backdrop-filter: none; }
#world[data-sag-facet="3"] { backdrop-filter: contrast(1.1) }
#world[data-sag-facet="6"] { backdrop-filter: contrast(1.2) blur(1px) }

#motifs {
  display: flex;
  flex-wrap: wrap;
  width: 72vw;
}

#motifs span {
  text-transform: uppercase;
  min-width: 90px;
  margin-right: 5px;
  margin-bottom: 3px;
  display: block;
  padding: 10px;
  border-radius: 3px;
  color: #fff;
  text-shadow: rgba(1, 1, 1, 0.5) 1px 1px 5px;
  border-bottom-left-radius: 20px;
  border-top-left-radius: 20px;
  text-indent: 5px;
  box-shadow: rgba(29, 15, 238, 0.4) 2px 2px 2px;
  background: linear-gradient(90deg, rgba(6, 186, 132, 0.85) 60%, rgba(243, 85, 28, 0.4));
}

#knobs {
  list-style-type: none;
  text-align: left;
  width: 70vw;
  padding-left: 0;
}

#knobs li {
  background-color: rgb(78, 27, 10);
  padding: 10px;
  margin: 3px 0;
  border-radius: 3px;
  width: 200px;
  text-align: center;
}

@keyframes sag-pulse {
  from { transform: scale(1); }
  to   { transform: scale(calc(1 + var(--spawn) * 0.14)));
}
@keyframes sag-sway {
  0%   { transform: translateX(-2px) rotate(-0.4deg) scale(calc(1 + var(--spawn) * 0.14)); background-position: 0% 0%; }
  50%  { transform: translateX( 2px) rotate( 0.4deg) scale(calc(1 + var(--spawn) * 0.14)); background-position: 100% 100%; }
  100% { transform: translateX(-2px) rotate(-0.4deg) scale(calc(1 + var(--spawn) * 0.14)); background-position: 0% 0%; }
}
